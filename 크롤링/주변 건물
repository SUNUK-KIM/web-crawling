{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 주변 지하철역과의 거리"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [],
   "source": [
    "## 주거지와 가까운 지하철역과의 거리 \n",
    "\n",
    "## 불러와!\n",
    "from haversine import  haversine\n",
    "from openpyxl import load_workbook, Workbook\n",
    "import pandas as pd \n",
    "\n",
    "## excell 파일 불러오기/ list 작성\n",
    "xl_book = load_workbook('지하철역 위치.xlsx')\n",
    "xl_sheet = xl_book.active\n",
    "xl2_book = load_workbook('아파트 좌표(주).xlsx')\n",
    "xl2_sheet = xl2_book.active\n",
    "\n",
    "cc_data = list() # 경도 리스트\n",
    "dd_data = list() # 위도 리스트\n",
    "cd_data = list() # 경도 위도 리스트\n",
    "dis_data = list() #거리 리스트\n",
    "add_data = list() # 합 리스트\n",
    "ac_data = list() # 아파트 경도\n",
    "ad_data = list() # 아파트 위도\n",
    "apt_data = list() # 아파트 경도위도\n",
    "aptA_data = list() # 아파트명 추가\n",
    "test_data = list() # 리스트 활용\n",
    " \n",
    "## 아파트 경도, 위도 리스트 작성하기\n",
    "col2 = xl2_sheet['C']\n",
    "col3 = xl2_sheet['D']\n",
    "col4 = xl2_sheet['A']\n",
    "\n",
    "for ap in col2 :\n",
    "    ac_data.append(ap.value)\n",
    "for ap1 in col3 :\n",
    "    ad_data.append(ap1.value)\n",
    "for r in range(0,len(ac_data)):\n",
    "     apt_data.append([ac_data[r],ad_data[r]])\n",
    "apt_data.remove(['X좌표', 'Y좌표'])\n",
    "for ke in col4 :\n",
    "    aptA_data.append(ke.value)\n",
    "\n",
    "aptA_data.remove('아파트명')\n",
    "\n",
    "## 지하철역 경도, 위도 작성하기\n",
    "col = xl_sheet['C']\n",
    "col1 = xl_sheet['D']\n",
    "\n",
    "for cell in col :\n",
    "    cc_data.append(cell.value)\n",
    "for cell2 in col1 :\n",
    "    dd_data.append(cell2.value)\n",
    "for i in range(0,len(cc_data)):\n",
    "     cd_data.append([cc_data[i],dd_data[i]])\n",
    "cd_data.remove(['X좌표', 'Y좌표'])\n",
    "\n",
    "## 경도, 위도 거리 계산 함수\n",
    "def aroundB(X,Y) :\n",
    "    test_data.append(haversine(X,Y)*1000)\n",
    "    \n",
    "    \n",
    "    \n",
    "# 반복문 아파트위치/ 버스정류장 위치        \n",
    "for h in apt_data:\n",
    "    for e in cd_data :\n",
    "        aroundB(h,e)\n",
    "    dis_data.append(min(test_data))\n",
    "    del test_data[:]\n",
    "    \n",
    "\n",
    "# 작성된 리스트 엑셀파일로 변경\n",
    "dis_data = pd.DataFrame(dis_data)\n",
    "dis_data.columns = ['가까운 지하철역 거리']\n",
    "aptA_data = pd.DataFrame(aptA_data)\n",
    "aptA_data.columns = ['아파트명']\n",
    "\n",
    "#두 데이터 합치기\n",
    "sub_data = pd.concat([dis_data,aptA_data],axis=1)\n",
    "sub_data\n",
    "#엑셀 데이터 저장하기\n",
    "sub_data.to_excel('sub_data.xlsx')\n",
    "    \n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
